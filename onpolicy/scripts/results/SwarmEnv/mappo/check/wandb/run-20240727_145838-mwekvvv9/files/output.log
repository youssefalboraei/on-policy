obs_space:  [Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64), Box(-inf, inf, (14,), float64)]
share_obs_space:  [Box(-inf, inf, (140,), float32)]
act_space:  [Discrete(15), Discrete(15), Discrete(15), Discrete(15), Discrete(15), Discrete(15), Discrete(15), Discrete(15), Discrete(15), Discrete(15)]
Traceback (most recent call last):
  File "C:\Users\y2-alboraei\.conda\envs\on-policy\lib\multiprocessing\connection.py", line 312, in _recv_bytes
    nread, err = ov.GetOverlappedResult(True)
BrokenPipeError: [WinError 109] The pipe has been ended
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "\\nstu-nas01.uwe.ac.uk\users4$\y2-alboraei\Windows\Downloads\on-policy\onpolicy\scripts\train\train_swarm.py", line 177, in <module>
    main(sys.argv[1:])
  File "\\nstu-nas01.uwe.ac.uk\users4$\y2-alboraei\Windows\Downloads\on-policy\onpolicy\scripts\train\train_swarm.py", line 163, in main
    runner.run()
  File "\\nstu-nas01.uwe.ac.uk\users4$\y2-alboraei\windows\downloads\on-policy\onpolicy\runner\shared\swarm_runner.py", line 28, in run
    obs, rewards, dones, infos = self.envs.step(actions)
  File "\\nstu-nas01.uwe.ac.uk\users4$\y2-alboraei\windows\downloads\on-policy\onpolicy\envs\env_wrappers.py", line 107, in step
    return self.step_wait()
  File "\\nstu-nas01.uwe.ac.uk\users4$\y2-alboraei\windows\downloads\on-policy\onpolicy\envs\env_wrappers.py", line 263, in step_wait
    results = [remote.recv() for remote in self.remotes]
  File "\\nstu-nas01.uwe.ac.uk\users4$\y2-alboraei\windows\downloads\on-policy\onpolicy\envs\env_wrappers.py", line 263, in <listcomp>
    results = [remote.recv() for remote in self.remotes]
  File "C:\Users\y2-alboraei\.conda\envs\on-policy\lib\multiprocessing\connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "C:\Users\y2-alboraei\.conda\envs\on-policy\lib\multiprocessing\connection.py", line 321, in _recv_bytes
    raise EOFError
EOFError